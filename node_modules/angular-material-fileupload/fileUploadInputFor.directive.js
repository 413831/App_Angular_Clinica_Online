import * as tslib_1 from "tslib";
import { Directive, ElementRef, EventEmitter, HostListener, Input, Output, } from '@angular/core';
/**
 * A material design file upload queue component.
 */
var FileUploadInputFor = /** @class */ (function () {
    function FileUploadInputFor(element) {
        this.element = element;
        this._queue = null;
        this.onFileSelected = new EventEmitter();
        this._element = this.element.nativeElement;
    }
    Object.defineProperty(FileUploadInputFor.prototype, "fileUploadQueue", {
        set: function (value) {
            if (value) {
                this._queue = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    FileUploadInputFor.prototype.onChange = function () {
        var files = this.element.nativeElement.files;
        this.onFileSelected.emit(files);
        for (var i = 0; i < files.length; i++) {
            this._queue.add(files[i]);
        }
        this.element.nativeElement.value = '';
    };
    FileUploadInputFor.prototype.onDrop = function (event) {
        var files = event.dataTransfer.files;
        this.onFileSelected.emit(files);
        for (var i = 0; i < files.length; i++) {
            this._queue.add(files[i]);
        }
        event.preventDefault();
        event.stopPropagation();
        this.element.nativeElement.value = '';
    };
    FileUploadInputFor.prototype.onDropOver = function (event) {
        event.preventDefault();
    };
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", EventEmitter)
    ], FileUploadInputFor.prototype, "onFileSelected", void 0);
    tslib_1.__decorate([
        Input('fileUploadInputFor'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], FileUploadInputFor.prototype, "fileUploadQueue", null);
    tslib_1.__decorate([
        HostListener('change'),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", []),
        tslib_1.__metadata("design:returntype", Object)
    ], FileUploadInputFor.prototype, "onChange", null);
    tslib_1.__decorate([
        HostListener('drop', ['$event']),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", Object)
    ], FileUploadInputFor.prototype, "onDrop", null);
    tslib_1.__decorate([
        HostListener('dragover', ['$event']),
        tslib_1.__metadata("design:type", Function),
        tslib_1.__metadata("design:paramtypes", [Object]),
        tslib_1.__metadata("design:returntype", Object)
    ], FileUploadInputFor.prototype, "onDropOver", null);
    FileUploadInputFor = tslib_1.__decorate([
        Directive({
            selector: 'input[fileUploadInputFor], div[fileUploadInputFor]',
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef])
    ], FileUploadInputFor);
    return FileUploadInputFor;
}());
export { FileUploadInputFor };
//# sourceMappingURL=fileUploadInputFor.directive.js.map