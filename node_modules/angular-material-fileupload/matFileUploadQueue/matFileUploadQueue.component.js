import * as tslib_1 from "tslib";
import { Component, QueryList, Input, ContentChildren, forwardRef } from '@angular/core';
import { MatFileUpload } from './../matFileUpload/matFileUpload.component';
import { merge } from 'rxjs';
import { startWith } from 'rxjs/operators';
import { HttpHeaders, HttpParams } from '@angular/common/http';
/**
 * A material design file upload queue component.
 */
var MatFileUploadQueue = /** @class */ (function () {
    function MatFileUploadQueue() {
        this.files = [];
        this.httpRequestHeaders = new HttpHeaders();
        this.httpRequestParams = new HttpParams();
        this.fileAlias = "file";
    }
    Object.defineProperty(MatFileUploadQueue.prototype, "fileUploadRemoveEvents", {
        /** Combined stream of all of the file upload remove change events. */
        get: function () {
            return merge.apply(void 0, this.fileUploads.map(function (fileUpload) { return fileUpload.removeEvent; }));
        },
        enumerable: true,
        configurable: true
    });
    MatFileUploadQueue.prototype.ngAfterViewInit = function () {
        var _this = this;
        // When the list changes, re-subscribe
        this._changeSubscription = this.fileUploads.changes.pipe(startWith(null)).subscribe(function () {
            if (_this._fileRemoveSubscription) {
                _this._fileRemoveSubscription.unsubscribe();
            }
            _this._listenTofileRemoved();
        });
    };
    MatFileUploadQueue.prototype._listenTofileRemoved = function () {
        var _this = this;
        this._fileRemoveSubscription = this.fileUploadRemoveEvents.subscribe(function (event) {
            _this.files.splice(event.id, 1);
        });
    };
    MatFileUploadQueue.prototype.add = function (file) {
        this.files.push(file);
    };
    MatFileUploadQueue.prototype.uploadAll = function () {
        this.fileUploads.forEach(function (fileUpload) { fileUpload.upload(); });
    };
    MatFileUploadQueue.prototype.removeAll = function () {
        this.files.splice(0, this.files.length);
    };
    MatFileUploadQueue.prototype.ngOnDestroy = function () {
        if (this.files) {
            this.removeAll();
        }
    };
    tslib_1.__decorate([
        ContentChildren(forwardRef(function () { return MatFileUpload; })),
        tslib_1.__metadata("design:type", QueryList)
    ], MatFileUploadQueue.prototype, "fileUploads", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], MatFileUploadQueue.prototype, "httpUrl", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], MatFileUploadQueue.prototype, "httpRequestHeaders", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], MatFileUploadQueue.prototype, "httpRequestParams", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], MatFileUploadQueue.prototype, "fileAlias", void 0);
    MatFileUploadQueue = tslib_1.__decorate([
        Component({
            selector: 'mat-file-upload-queue',
            template: "<ng-content></ng-content>\n<br>\n<button mat-raised-button color=\"primary\" *ngIf=\"files.length > 0\" (click)=\"uploadAll()\">Upload All</button>\n<button mat-raised-button color=\"primary\" *ngIf=\"files.length > 0\" (click)=\"removeAll()\">Remove All</button>\n",
            exportAs: 'matFileUploadQueue'
        })
    ], MatFileUploadQueue);
    return MatFileUploadQueue;
}());
export { MatFileUploadQueue };
//# sourceMappingURL=matFileUploadQueue.component.js.map