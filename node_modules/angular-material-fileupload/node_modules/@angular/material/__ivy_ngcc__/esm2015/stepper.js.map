{"version":3,"file":"stepper.js","sources":["../../../src/lib/stepper/step-label.ts","../../../src/lib/stepper/stepper-intl.ts","../../../src/lib/stepper/step-header.ts","../../../src/lib/stepper/stepper-animations.ts","../../../src/lib/stepper/stepper-icon.ts","../../../src/lib/stepper/stepper.ts","../../../src/lib/stepper/stepper-button.ts","../../../src/lib/stepper/stepper-module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n\n\n/** @docs-private */\nexport function MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl: MatStepperIntl) {\n  return parentIntl || new MatStepperIntl();\n}\n\n/** @docs-private */\nexport const MAT_STEPPER_INTL_PROVIDER = {\n  provide: MatStepperIntl,\n  deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n  useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\nimport {CdkStepHeader, StepState} from '@angular/cdk/stepper';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader extends CdkStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: StepState;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    _elementRef: ElementRef<HTMLElement>,\n    changeDetectorRef: ChangeDetectorRef) {\n    super(_elementRef);\n    _focusMonitor.monitor(_elementRef, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\nimport {StepState} from '@angular/cdk/stepper';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  CdkStep,\n  CdkStepper,\n  StepContentPositionState,\n  STEPPER_GLOBAL_OPTIONS,\n  StepperOptions\n} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil, distinctUntilChanged} from 'rxjs/operators';\n\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n              @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    super(stepper, stepperOptions);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({\n  selector: '[matStepper]'\n})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  /** Stream of animation `done` events when the body expands/collapses. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  ngAfterContentInit() {\n    this._icons.forEach(({name, templateRef}) => this._iconOverrides[name] = templateRef);\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n\n    this._animationDone.pipe(\n      // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n      // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n      // See https://github.com/angular/angular/issues/24084\n      distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState),\n      takeUntil(this._destroyed)\n    ).subscribe(event => {\n      if ((event.toState as StepContentPositionState) === 'current') {\n        this.animationDone.emit();\n      }\n    });\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [{provide: MatStepper, useExisting: MatHorizontalStepper}],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper {\n  /** Whether the label should display in bottom or end position. */\n  @Input()\n  labelPosition: 'bottom' | 'end' = 'end';\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [{provide: MatStepper, useExisting: MatVerticalStepper}],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(\n    @Optional() dir: Directionality,\n    changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    super(dir, changeDetectorRef, elementRef, _document);\n    this._orientation = 'vertical';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepper, CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {MatStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '(click)': '_stepper.next()',\n    '[type]': 'type',\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\n})\nexport class MatStepperNext extends CdkStepperNext {}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '(click)': '_stepper.previous()',\n    '[type]': 'type',\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MAT_STEPPER_INTL_PROVIDER} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n"]}