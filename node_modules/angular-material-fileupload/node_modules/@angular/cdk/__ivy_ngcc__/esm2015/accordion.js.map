{"version":3,"file":"accordion.js","sources":["../../../src/cdk/accordion/accordion.ts","../../../src/cdk/accordion/accordion-item.ts","../../../src/cdk/accordion/accordion-module.ts"],"names":["nextId"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n})\nexport class CdkAccordion implements OnDestroy, OnChanges {\n  /** Emits when the state of the accordion changes */\n  readonly _stateChanges = new Subject<SimpleChanges>();\n\n  /** Stream that emits true/false when openAll/closeAll is triggered. */\n  readonly _openCloseAllActions: Subject<boolean> = new Subject<boolean>();\n\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll(): void {\n    this._openCloseAll(true);\n  }\n\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n  closeAll(): void {\n    this._openCloseAll(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._stateChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  private _openCloseAll(expanded: boolean): void {\n    if (this.multi) {\n      this._openCloseAllActions.next(expanded);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n  SkipSelf,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CdkAccordion} from './accordion';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item, [cdkAccordionItem]',\n  exportAs: 'cdkAccordionItem',\n  providers: [\n    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n    // to the same accordion.\n    {provide: CdkAccordion, useValue: undefined},\n  ],\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Subscription to openAll/closeAll events. */\n  private _openCloseAllSubscription = Subscription.EMPTY;\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() @SkipSelf() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n\n  private _subscribeToOpenCloseAllActions(): Subscription {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n})\nexport class CdkAccordionModule {}\n"]}