{"version":3,"file":"stepper.js","sources":["../../../src/cdk/stepper/step-label.ts","../../../src/cdk/stepper/step-header.ts","../../../src/cdk/stepper/stepper.ts","../../../src/cdk/stepper/stepper-button.ts","../../../src/cdk/stepper/stepper-module.ts"],"names":["obaservableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(protected _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl} from '@angular/forms';\nimport {CdkStepLabel} from './step-label';\nimport {Observable, Subject, of as obaservableOf} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {CdkStepHeader} from './step-header';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous' | 'current' | 'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal' | 'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number' | 'edit' | 'done' | 'error' | string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS =\n  new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControl;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as complted. */\n  @Input()\n  get editable(): boolean { return this._editable; }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean { return this._optional; }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._customCompleted == null ? this._getDefaultCompleted() : this._customCompleted;\n  }\n  set completed(value: boolean) {\n    this._customCompleted = coerceBooleanProperty(value);\n  }\n  private _customCompleted: boolean | null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean | null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n    @Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper,\n    @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._customCompleted != null) {\n      this._customCompleted = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document | undefined;\n\n  /**\n   * The list of step components that the stepper is holding.\n   * @deprecated use `steps` instead\n   * @breaking-change 9.0.0 remove this property\n   */\n  @ContentChildren(CdkStep) _steps: QueryList<CdkStep>;\n\n  /** The list of step components that the stepper is holding. */\n  get steps():  QueryList<CdkStep> {\n    return this._steps;\n  }\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean { return this._linear; }\n  set linear(value: boolean) { this._linear = coerceBooleanProperty(value); }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() { return this._selectedIndex; }\n  set selectedIndex(index: number) {\n    if (this.steps) {\n      // Ensure that the index can't be out of bounds.\n      if (index < 0 || index > this.steps.length - 1) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex != index &&\n          !this._anyControlsInvalidOrPending(index) &&\n          (index >= this._selectedIndex || this.steps.toArray()[index].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = index;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\n      = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n    @Optional() private _dir: Directionality,\n    private _changeDetectorRef: ChangeDetectorRef,\n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    private _elementRef?: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view chidren. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n      .withWrap()\n      .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? this._dir.change as Observable<Direction> : obaservableOf<Direction>())\n      .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n      .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItemIndex(this._selectedIndex);\n\n    this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType\n      ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n      : this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n    step: CdkStep,\n    isCurrentStep: boolean,\n    state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItemIndex(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else if (keyCode === HOME) {\n      manager.setFirstItemActive();\n      event.preventDefault();\n    } else if (keyCode === END) {\n      manager.setLastItemActive();\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete = control ?\n            (control.invalid || control.pending || !step.interacted) :\n            !step.completed;\n        return isIncomplete && !step.optional;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '(click)': '_stepper.next()',\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '(click)': '_stepper.previous()',\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CommonModule} from '@angular/common';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule, CommonModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n"]}