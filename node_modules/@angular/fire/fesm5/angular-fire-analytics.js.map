{"version":3,"file":"angular-fire-analytics.js","sources":["ng://@angular/fire/analytics/analytics.ts","ng://@angular/fire/analytics/analytics.service.ts","ng://@angular/fire/analytics/analytics.module.ts"],"sourcesContent":["import { Injectable, Inject, Optional, NgZone, InjectionToken, PLATFORM_ID } from '@angular/core';\nimport { of, empty, Observable } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, tap, shareReplay, switchMap, observeOn } from 'rxjs/operators';\nimport { FirebaseAppConfig, FirebaseOptions, ɵAngularFireSchedulers, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵfirebaseAppFactory, ɵPromiseProxy } from '@angular/fire';\nimport { analytics } from 'firebase';\n\nexport interface Config {[key:string]: any};\n\nexport const COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.analytics.analyticsCollectionEnabled');\nexport const APP_VERSION = new InjectionToken<string>('angularfire2.analytics.appVersion');\nexport const APP_NAME = new InjectionToken<string>('angularfire2.analytics.appName');\nexport const DEBUG_MODE = new InjectionToken<boolean>('angularfire2.analytics.debugMode');\nexport const CONFIG = new InjectionToken<Config>('angularfire2.analytics.config');\n\nconst APP_NAME_KEY = 'app_name';\nconst APP_VERSION_KEY = 'app_version';\nconst DEBUG_MODE_KEY = 'debug_mode';\nconst ANALYTICS_ID_FIELD = 'measurementId';\nconst GTAG_CONFIG_COMMAND = 'config';\nconst GTAG_FUNCTION_NAME = 'gtag';\nconst DATA_LAYER_NAME = 'dataLayer';\n\nexport interface AngularFireAnalytics extends ɵPromiseProxy<analytics.Analytics> {};\n\nlet gtag: (...args: any[]) => void;\nlet analyticsInitialized: Promise<void>;\nconst analyticsInstanceCache: {[key:string]: Observable<analytics.Analytics>} = {};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAnalytics {\n\n  async updateConfig(config: Config) {\n    await analyticsInitialized;\n    gtag(GTAG_CONFIG_COMMAND, this.options[ANALYTICS_ID_FIELD], { ...config, update: true });\n  };\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) private options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(COLLECTION_ENABLED) analyticsCollectionEnabled:boolean|null,\n    @Optional() @Inject(APP_VERSION) providedAppVersion:string|null,\n    @Optional() @Inject(APP_NAME) providedAppName:string|null,\n    @Optional() @Inject(DEBUG_MODE) debugModeEnabled:boolean|null,\n    @Optional() @Inject(CONFIG) providedConfig:Config|null,\n    @Inject(PLATFORM_ID) platformId:Object,\n    zone: NgZone\n  ) {\n\n    if (!analyticsInitialized) {\n      if (isPlatformBrowser(platformId)) {\n        gtag = window[GTAG_FUNCTION_NAME] || function() { window[DATA_LAYER_NAME].push(arguments) };\n        window[DATA_LAYER_NAME] = window[DATA_LAYER_NAME] || [];\n        analyticsInitialized = zone.runOutsideAngular(() =>\n          new Promise(resolve => {\n            window[GTAG_FUNCTION_NAME] = (...args: any[]) => {\n              if (args[0] == 'js') { resolve() }\n              gtag(...args);\n            }\n          })\n        );\n      } else {\n        gtag = () => {};\n        analyticsInitialized = Promise.resolve();\n      }\n    }\n\n    let analytics = analyticsInstanceCache[options[ANALYTICS_ID_FIELD]];\n    if (!analytics) {\n      analytics = of(undefined).pipe(\n        observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n        switchMap(() => isPlatformBrowser(platformId) ? import('firebase/analytics') : empty()),\n        map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n        map(app => app.analytics()),\n        tap(analytics => {\n          if (analyticsCollectionEnabled === false) { analytics.setAnalyticsCollectionEnabled(false) }\n        }),\n        shareReplay({ bufferSize: 1, refCount: false }),\n      );\n      analyticsInstanceCache[options[ANALYTICS_ID_FIELD]] = analytics;\n    }\n\n    if (providedConfig)     { this.updateConfig(providedConfig) }\n    if (providedAppName)    { this.updateConfig({ [APP_NAME_KEY]:    providedAppName }) }\n    if (providedAppVersion) { this.updateConfig({ [APP_VERSION_KEY]: providedAppVersion }) }\n    if (debugModeEnabled)   { this.updateConfig({ [DEBUG_MODE_KEY]:  1 }) }\n\n    return ɵlazySDKProxy(this, analytics, zone);\n\n  }\n\n}","import { Injectable, Optional, NgZone, OnDestroy, ComponentFactoryResolver, Inject, PLATFORM_ID, Injector, NgModuleFactory } from '@angular/core';\nimport { Subscription, from, Observable, of } from 'rxjs';\nimport { filter, withLatestFrom, switchMap, map, tap, pairwise, startWith, groupBy, mergeMap, observeOn } from 'rxjs/operators';\nimport { Router, NavigationEnd, ActivationEnd, ROUTES } from '@angular/router';\nimport { ɵAngularFireSchedulers } from '@angular/fire';\nimport { AngularFireAnalytics, DEBUG_MODE } from './analytics';\nimport { User } from 'firebase/app';\nimport { Title } from '@angular/platform-browser';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY  = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\n\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst DEFAULT_SCREEN_CLASS = '???';\nconst NG_PRIMARY_OUTLET = 'primary';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n\nconst ANNOTATIONS = '__annotations__';\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class ScreenTrackingService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n  \n    constructor(\n      analytics: AngularFireAnalytics,\n      @Optional() router:Router,\n      @Optional() title:Title,\n      componentFactoryResolver: ComponentFactoryResolver,\n      @Inject(PLATFORM_ID) platformId:Object,\n      @Optional() @Inject(DEBUG_MODE) debugModeEnabled:boolean|null,\n      zone: NgZone,\n      injector: Injector\n    ) {\n        if (!router || !isPlatformBrowser(platformId)) { return this }\n        zone.runOutsideAngular(() => {\n            const activationEndEvents = router.events.pipe(filter<ActivationEnd>(e => e instanceof ActivationEnd));\n            const navigationEndEvents = router.events.pipe(filter<NavigationEnd>(e => e instanceof NavigationEnd));\n            this.disposable = navigationEndEvents.pipe(\n                withLatestFrom(activationEndEvents),\n                switchMap(([navigationEnd, activationEnd]) => {\n                    // SEMVER: start using optional chains and nullish coalescing once we support newer typescript\n                    const page_path = navigationEnd.url;\n                    const screen_name = activationEnd.snapshot.routeConfig && activationEnd.snapshot.routeConfig.path || page_path;\n                    const params = {\n                        [SCREEN_NAME_KEY]: screen_name,\n                        [PAGE_PATH_KEY]: page_path,\n                        [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n                        [FIREBASE_SCREEN_NAME_KEY]: screen_name,\n                        [OUTLET_KEY]: activationEnd.snapshot.outlet\n                    };\n                    if (title) {\n                        params[PAGE_TITLE_KEY] = title.getTitle()\n                    }\n                    const component = activationEnd.snapshot.component;\n                    const routeConfig = activationEnd.snapshot.routeConfig;\n                    const loadChildren = routeConfig && routeConfig.loadChildren;\n                    // TODO figure out how to handle minification\n                    if (typeof loadChildren === \"string\") {\n                        // SEMVER: this is the older lazy load style \"./path#ClassName\", drop this when we drop old ng\n                        // TODO is it worth seeing if I can look up the component factory selector from the module name?\n                        // it's lazy so it's not registered with componentFactoryResolver yet... seems a pain for a depreciated style\n                        return of({...params, [SCREEN_CLASS_KEY]: loadChildren.split('#')[1]});\n                    } else if (typeof component === 'string') {\n                        return of({...params, [SCREEN_CLASS_KEY]: component });\n                    } else if (component) {\n                        const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n                        return of({...params, [SCREEN_CLASS_KEY]: componentFactory.selector });\n                    } else if (loadChildren) {\n                        const loadedChildren = loadChildren();\n                        var loadedChildren$: Observable<any> = (loadedChildren instanceof Observable) ? loadedChildren : from(Promise.resolve(loadedChildren));\n                        return loadedChildren$.pipe(\n                          map(lazyModule => {\n                            if (lazyModule instanceof NgModuleFactory) {\n                              // AOT create an injector\n                              const moduleRef = lazyModule.create(injector);\n                              // INVESTIGATE is this the right way to get at the matching route?\n                              const routes = moduleRef.injector.get(ROUTES);\n                              const component = routes[0][0].component; // should i just be grabbing 0-0 here?\n                              try {\n                                const componentFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(component!);\n                                return {...params, [SCREEN_CLASS_KEY]: componentFactory.selector};\n                              } catch(_) {\n                                return {...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS};\n                              }\n                            } else {\n                              // JIT look at the annotations\n                              // INVESTIGATE are there public APIs for this stuff?\n                              const declarations = [].concat.apply([], (lazyModule[ANNOTATIONS] || []).map((f:any) => f.declarations));\n                              const selectors = [].concat.apply([], declarations.map((c:any) => (c[ANNOTATIONS] || []).map((f:any) => f.selector)));\n                              // should I just be grabbing the selector like this or should i match against the route component?\n                              //   const routerModule = lazyModule.ngInjectorDef.imports.find(i => i.ngModule && ....);\n                              //   const route = routerModule.providers[0].find(p => p.provide == ROUTES).useValue[0];\n                              return {...params, [SCREEN_CLASS_KEY]: selectors[0] || DEFAULT_SCREEN_CLASS};\n                            }\n                          })\n                        );\n                    } else {\n                        return of({...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS});\n                    }\n                }),\n                map(params => ({\n                    [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n                    [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n                    ...params\n                })),\n                tap(params => {\n                    // TODO perhaps I can be smarter about this, bubble events up to the nearest outlet?\n                    if (params[OUTLET_KEY] == NG_PRIMARY_OUTLET) {\n                        analytics.setCurrentScreen(params[SCREEN_NAME_KEY]);\n                        analytics.updateConfig({\n                            [PAGE_PATH_KEY]: params[PAGE_PATH_KEY],\n                            [SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY]\n                        });\n                        if (title) {\n                            analytics.updateConfig({ [PAGE_TITLE_KEY]: params[PAGE_TITLE_KEY] })\n                        }\n                    }\n                }),\n                groupBy(params => params[OUTLET_KEY]),\n                mergeMap(group => group.pipe(startWith(undefined), pairwise())),\n                map(([prior, current]) => prior ? {\n                    [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n                    [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n                    [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n                    ...current!\n                } : current!),\n                tap(params => debugModeEnabled && console.info(SCREEN_VIEW_EVENT, params)),\n                tap(params => zone.runOutsideAngular(() => analytics.logEvent(SCREEN_VIEW_EVENT, params)))\n            ).subscribe();\n        });\n    }\n  \n    ngOnDestroy() {\n      if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n  \n}\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class UserTrackingService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    // TODO a user properties injector\n    constructor(\n        analytics: AngularFireAnalytics,\n        zone: NgZone,\n        @Inject(PLATFORM_ID) platformId:Object\n    ) {\n        const schedulers = new ɵAngularFireSchedulers(zone);\n\n        if (!isPlatformServer(platformId)) {\n            zone.runOutsideAngular(() => {\n                // @ts-ignore zap the import in the UMD\n                this.disposable = from(import('firebase/auth')).pipe(\n                    observeOn(schedulers.outsideAngular),\n                    switchMap(() => analytics.app),\n                    map(app => app.auth()),\n                    switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n                    switchMap(user => analytics.setUserId(user ? user.uid : null!))\n                ).subscribe();\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n}\n\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2**32 - 1)) - 2**31;\n\nconst knownScreenInstanceIDs: {[key:string]: number} = {};\n\nconst getScreenInstanceID = (params:{[key:string]: any}) => {\n    // unique the screen class against the outlet name\n    const screenInstanceKey = [\n        params[SCREEN_CLASS_KEY],\n        params[OUTLET_KEY]\n    ].join(SCREEN_INSTANCE_DELIMITER);\n    if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n        return knownScreenInstanceIDs[screenInstanceKey];\n    } else {\n        const ret = nextScreenInstanceID++;\n        knownScreenInstanceIDs[screenInstanceKey] = ret;\n        return ret;\n    }\n}","import { NgModule, Optional } from '@angular/core';\nimport { UserTrackingService, ScreenTrackingService } from './analytics.service';\nimport { AngularFireAnalytics } from './analytics';\n\n@NgModule({\n  providers: [ AngularFireAnalytics ]\n})\nexport class AngularFireAnalyticsModule {\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() screenTracking: ScreenTrackingService,\n    @Optional() userTracking: UserTrackingService\n  ) {\n    // calling anything on analytics will eagerly load the SDK\n    analytics.app;\n  }\n}\n"],"names":[],"mappings":"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"}