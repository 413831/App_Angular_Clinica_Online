{"version":3,"file":"angular-fire-performance.js","sources":["ng://@angular/fire/performance/performance.ts","ng://@angular/fire/performance/performance.service.ts","ng://@angular/fire/performance/performance.module.ts"],"sourcesContent":["import { Injectable, NgZone, InjectionToken, Inject, Optional, PLATFORM_ID } from '@angular/core';\nimport { Observable, Subscription, of, empty } from 'rxjs';\nimport { tap, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp, ɵPromiseProxy, ɵlazySDKProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<performance.Performance> {};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n  \n  private readonly performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled:boolean|null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled:boolean|null,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) platformId:Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : empty()),\n      map(() => zone.runOutsideAngular(() => app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled == false) { performance.instrumentationEnabled = false }\n        if (dataCollectionEnabled == false) { performance.dataCollectionEnabled = false }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId:string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return { unsubscribe: () => {\n        window.performance.mark(endMarkName);\n        window.performance.measure(traceId, startMarkName, endMarkName);\n      }};\n    });\n  } else {\n    return empty();\n  }\n}\n\nexport const traceUntil = <T=any>(name:string, test: (a:T) => boolean, options?: { orComplete?: boolean }) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a  => test(a) && traceSubscription.unsubscribe(),\n      () => {},\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T=any>(name:string, test: (a:T) => boolean, options?: { orComplete?: boolean}) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription|undefined;\n  return source$.pipe(\n    tap(\n      a  => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          traceSubscription && traceSubscription.unsubscribe();\n          traceSubscription = undefined;\n        }\n      },\n      () => {},\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T=any>(name:string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {},\n      () => {},\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T=any>(name:string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {},\n      () => {}\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T=any>(name:string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {},\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n","import { Injectable, OnDestroy, ApplicationRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== \"undefined\" && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    perf.dataCollectionEnabled\n  }\n}\n"],"names":[],"mappings":"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"}