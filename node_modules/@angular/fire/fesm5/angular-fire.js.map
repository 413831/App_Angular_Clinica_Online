{"version":3,"file":"angular-fire.js","sources":["ng://@angular/fire/angularfire2.ts","ng://@angular/fire/firebase.app.module.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable, Subscription, SchedulerLike, SchedulerAction, queueScheduler, Operator, Subscriber, TeardownLogic, asyncScheduler } from 'rxjs';\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\n\nfunction noop() { }\n\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\nexport class ɵZoneScheduler implements SchedulerLike {\n  constructor(private zone: any, private delegate: any = queueScheduler) { }\n\n  now() {\n    return this.delegate.now();\n  }\n\n  schedule(work: (this: SchedulerAction<any>, state?: any) => void, delay?: number, state?: any): Subscription {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function (this: SchedulerAction<any>, state: any) {\n      targetZone.runGuarded(() => {\n        work.apply(this, [state]);\n      });\n    }\n\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state)\n  }\n}\n\nexport class ɵBlockUntilFirstOperator<T> implements Operator<T, T> {\n  private task: MacroTask | null = null;\n\n  constructor(private zone: any) { }\n\n  call(subscriber: Subscriber<T>, source: Observable<T>): TeardownLogic {\n    const unscheduleTask = this.unscheduleTask.bind(this);\n    this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n\n    return source.pipe(\n      tap(unscheduleTask, unscheduleTask, unscheduleTask)\n    ).subscribe(subscriber).add(unscheduleTask);\n  }\n\n  private unscheduleTask() {\n    // maybe this is a race condition, invoke in a timeout\n    // hold for 10ms while I try to figure out what is going on    \n    setTimeout(() => {\n      if (this.task != null && this.task.state === 'scheduled') {\n        this.task.invoke();\n        this.task = null;\n      }\n    }, 10);\n  }\n}\n\nexport class ɵAngularFireSchedulers {\n  public readonly outsideAngular: ɵZoneScheduler;\n  public readonly insideAngular: ɵZoneScheduler;\n\n  constructor(public ngZone: NgZone) {\n    this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n    this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n  }\n}\n\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n */\nexport function ɵkeepUnstableUntilFirstFactory(\n  schedulers: ɵAngularFireSchedulers,\n  platformId: Object\n) {\n  return function keepUnstableUntilFirst<T>(obs$: Observable<T>): Observable<T> {\n    obs$ = obs$.lift(\n      new ɵBlockUntilFirstOperator(schedulers.ngZone)\n    );\n\n    return obs$.pipe(\n      // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n      subscribeOn(schedulers.outsideAngular),\n      // Run operators inside the angular zone (e.g. side effects via tap())\n      observeOn(schedulers.insideAngular)\n      // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n      // share()\n    );\n  }\n}\n\ntype FunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? K : never }[keyof T];\ntype PromiseReturningFunctionPropertyNames<T> = { [K in FunctionPropertyNames<T>]: ReturnType<T[K]> extends Promise<any> ? K : never }[FunctionPropertyNames<T>];\ntype NonPromiseReturningFunctionPropertyNames<T> = { [K in FunctionPropertyNames<T>]: ReturnType<T[K]> extends Promise<any> ? never : K }[FunctionPropertyNames<T>];\ntype NonFunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? never : K }[keyof T];\n\nexport type ɵPromiseProxy<T> = { [K in NonFunctionPropertyNames<T>]: Promise<T[K]> } &\n  { [K in NonPromiseReturningFunctionPropertyNames<T>]: (...args: Parameters<T[K]>) => Promise<ReturnType<T[K]>> } &\n  { [K in PromiseReturningFunctionPropertyNames<T>   ]: (...args: Parameters<T[K]>) => ReturnType<T[K]> };\n\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nexport const ɵlazySDKProxy = (klass: any, observable: Observable<any>, zone: NgZone) => {\n  return new Proxy(klass, {\n    get: (_, name:string) => zone.runOutsideAngular(() => {\n      if (klass[name]) { return klass[name] }\n      if (noopFunctions.includes(name)) { return () => {} }\n      let promise = observable.toPromise().then(mod => {\n        const ret = mod && mod[name];\n        // TODO move to proper type guards\n        if (typeof ret == 'function') {\n          return ret.bind(mod);\n        } else if (ret && ret.then) {\n          return ret.then((res:any) => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      // recurse the proxy\n      return new Proxy(() => undefined, {\n          get: (_, name) => promise[name],\n          // TODO handle callbacks as transparently as I can \n          apply: (self, _, args) => promise.then(it => it && it(...args))\n        }\n      )\n    })\n  })\n};","import { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, PLATFORM_ID, Inject } from '@angular/core';\nimport { app, auth, database, messaging, storage, firestore, functions, analytics, performance, remoteConfig } from 'firebase/app';\nimport * as firebase from 'firebase/app';\n\n// INVESTIGATE Public types don't expose FirebaseOptions or FirebaseAppConfig, is this the case anylonger?\nexport interface FirebaseOptions {[key:string]: any};\nexport interface FirebaseAppConfig {[key:string]: any};\n\nexport const FIREBASE_OPTIONS = new InjectionToken<FirebaseOptions>('angularfire2.app.options');\nexport const FIREBASE_APP_NAME = new InjectionToken<string|FirebaseAppConfig|undefined>('angularfire2.app.nameOrConfig');\n\n// Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\nexport class FirebaseApp implements Partial<app.App> {\n    name: string;\n    options: {};\n    analytics: () => analytics.Analytics;\n    auth: () => auth.Auth;\n    database: (databaseURL?: string) => database.Database;\n    messaging: () => messaging.Messaging;\n    performance: () => performance.Performance;\n    storage: (storageBucket?: string) => storage.Storage;\n    delete: () => Promise<void>;\n    firestore: () => firestore.Firestore;\n    functions: (region?: string) => functions.Functions;\n    remoteConfig: () => remoteConfig.RemoteConfig;\n}\n\nexport const VERSION = new Version('ANGULARFIRE2_VERSION');\n\nexport function ɵfirebaseAppFactory(options: FirebaseOptions, zone: NgZone, nameOrConfig?: string|FirebaseAppConfig|null) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    // Added any due to some inconsistency between @firebase/app and firebase types\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0] as any;\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n    return (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config as any))) as FirebaseApp;\n}\n\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: ɵfirebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\n \n@NgModule({\n    providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n    static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        }\n    }\n    constructor(@Inject(PLATFORM_ID) platformId:Object ) {\n        firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n        firebase.registerVersion('angular', NG_VERSION.full);\n    }\n}"],"names":["firebase.apps","firebase.initializeApp","firebase.registerVersion","NG_VERSION"],"mappings":"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"}