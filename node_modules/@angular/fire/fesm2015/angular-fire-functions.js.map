{"version":3,"file":"angular-fire-functions.js","sources":["ng://@angular/fire/functions/functions.ts","ng://@angular/fire/functions/functions.module.ts"],"sourcesContent":["import { Injectable, Inject, Optional, NgZone, InjectionToken } from '@angular/core';\nimport { of, from, Observable } from 'rxjs';\nimport { map, switchMap, shareReplay, tap, observeOn } from 'rxjs/operators';\nimport { FirebaseOptions, FirebaseAppConfig, FIREBASE_APP_NAME, ɵlazySDKProxy, ɵPromiseProxy, ɵAngularFireSchedulers } from '@angular/fire';\nimport { FIREBASE_OPTIONS, ɵfirebaseAppFactory } from '@angular/fire';\nimport { functions } from 'firebase/app';\n\nexport const ORIGIN = new InjectionToken<string>('angularfire2.functions.origin');\nexport const REGION = new InjectionToken<string>('angularfire2.functions.region');\n\n// override httpsCallable for compatibility with 5.x\nexport interface AngularFireFunctions extends Omit<ɵPromiseProxy<functions.Functions>, 'httpsCallable'> { };\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireFunctions {\n\n  public readonly httpsCallable: <T=any, R=any>(name: string) => (data: T) => Observable<R>\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    @Optional() @Inject(REGION) region:string|null,\n    @Optional() @Inject(ORIGIN) origin:string|null\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    const functions = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => import('firebase/functions')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.functions(region || undefined)),\n      tap(functions => {\n        if (origin) { functions.useFunctionsEmulator(origin) }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.httpsCallable = <T=any, R=any>(name: string) =>\n      (data: T) => from(functions).pipe(\n        observeOn(schedulers.outsideAngular),\n        switchMap(functions => functions.httpsCallable(name)(data)),\n        map(r => r.data as R)\n      )\n\n    return ɵlazySDKProxy(this, functions, zone);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireFunctions } from './functions';\n\n@NgModule({\n  providers: [ AngularFireFunctions ]\n})\nexport class AngularFireFunctionsModule { }\n"],"names":[],"mappings":";;;;;;;;;;MAOa,MAAM,GAAG,IAAI,cAAc,CAAS,+BAA+B;;MACnE,MAAM,GAAG,IAAI,cAAc,CAAS,+BAA+B;;AAG2B,CAAC;MAK/F,oBAAoB;;;;;;;;IAI/B,YAC4B,OAAuB,EACV,YAAoD,EAC3F,IAAY,EACgB,MAAkB,EAClB,MAAkB;;cAExC,UAAU,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC;;cAE7C,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAClC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,EACpC,SAAS;;;QAAC,MAAM,OAAO,oBAAoB,CAAC,EAAC,EAC7C,GAAG;;;QAAC,MAAM,mBAAmB,CAAC,OAAO,EAAE,IAAI,EAAE,YAAY,CAAC,EAAC,EAC3D,GAAG;;;;QAAC,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,EAAC,EAC9C,GAAG;;;;QAAC,SAAS;YACX,IAAI,MAAM,EAAE;gBAAE,SAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAA;aAAE;SACvD,EAAC,EACF,WAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAChD;QAED,IAAI,CAAC,aAAa;;;;;QAAG,CAAe,IAAY;;;;QAC9C,CAAC,IAAO,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAC/B,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,EACpC,SAAS;;;;QAAC,SAAS,IAAI,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAC,EAC3D,GAAG;;;;QAAC,CAAC,uBAAI,CAAC,CAAC,IAAI,EAAK,EAAC,CACtB,CAAA,CAAA,CAAA;QAEH,OAAO,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;KAE7C;;;YApCF,UAAU,SAAC;gBACV,UAAU,EAAE,KAAK;aAClB;;;;4CAMI,MAAM,SAAC,gBAAgB;4CACvB,QAAQ,YAAI,MAAM,SAAC,iBAAiB;YAtBF,MAAM;4CAwBxC,QAAQ,YAAI,MAAM,SAAC,MAAM;4CACzB,QAAQ,YAAI,MAAM,SAAC,MAAM;;;;;IAP5B,6CAAyF;;;;;;;AClB3F,MAMa,0BAA0B;;;YAHtC,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAE,oBAAoB,CAAE;aACpC;;;;;;;;;;;;;;;"}