{"version":3,"sources":["ng://@angular/fire/functions/functions.ts","ng://@angular/fire/functions/functions.module.ts"],"names":["ORIGIN","InjectionToken","REGION","AngularFireFunctions","options","nameOrConfig","zone","region","origin","schedulers","ɵAngularFireSchedulers","functions","of","undefined","pipe","observeOn","outsideAngular","switchMap","import","map","ɵfirebaseAppFactory","app","tap","useFunctionsEmulator","shareReplay","bufferSize","refCount","this","httpsCallable","name","data","from","r","ɵlazySDKProxy","Injectable","args","providedIn","Inject","FIREBASE_OPTIONS","Optional","type","FIREBASE_APP_NAME","NgZone","AngularFireFunctionsModule","NgModule","providers"],"mappings":"2fAOaA,EAAS,IAAIC,EAAAA,eAAuB,iCACpCC,EAAS,IAAID,EAAAA,eAAuB,8CAY/C,SAAAE,EAC4BC,EACaC,EACvCC,EAC4BC,EACAC,OAEtBC,EAAa,IAAIC,EAAAA,0BAAuBJ,GAExCK,EAAYC,EAAAA,QAAGC,GAAWC,KAC9BC,EAAAA,UAAUN,EAAWO,gBACrBC,EAAAA,WAAS,WAAO,OAAAC,OAAO,yBACvBC,EAAAA,KAAG,WAAO,OAAAC,EAAAA,uBAAoBhB,EAASE,EAAMD,MAC7Cc,EAAAA,KAAG,SAACE,GAAO,OAAAA,EAAIV,UAAUJ,QAAUM,MACnCS,EAAAA,KAAG,SAACX,GACEH,GAAUG,EAAUY,qBAAqBf,MAE/CgB,EAAAA,YAAY,CAAEC,WAAY,EAAGC,UAAU,KAUzC,OAPAC,KAAKC,cAAa,SAAkBC,GAAY,OAAA,SAC7CC,GAAY,OAAAC,EAAAA,KAAKpB,GAAWG,KAC3BC,EAAAA,UAAUN,EAAWO,gBACrBC,EAAAA,WAAS,SAACN,GAAa,OAAAA,EAAUiB,cAAcC,EAAxBlB,CAA8BmB,MACrDX,EAAAA,KAAG,SAACa,GAAC,OAAIA,EAAM,WAGZC,EAAAA,iBAAcN,KAAMhB,EAAWL,8BAlCzC4B,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,4EAOTC,EAAAA,OAAMF,KAAA,CAACG,EAAAA,oDACPC,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMF,KAAA,CAACM,EAAAA,4BAtBeC,EAAAA,uCAwBlCH,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMF,KAAA,CAACjC,qCACnBqC,EAAAA,UAAQ,CAAAC,KAAIH,EAAAA,OAAMF,KAAA,CAACnC,iQCtBxB,SAAA2C,KAG0C,2BAHzCC,EAAAA,SAAQT,KAAA,CAAC,CACRU,UAAW,CAAE1C,OAE2BwC","sourcesContent":["import { Injectable, Inject, Optional, NgZone, InjectionToken } from '@angular/core';\nimport { of, from, Observable } from 'rxjs';\nimport { map, switchMap, shareReplay, tap, observeOn } from 'rxjs/operators';\nimport { FirebaseOptions, FirebaseAppConfig, FIREBASE_APP_NAME, ɵlazySDKProxy, ɵPromiseProxy, ɵAngularFireSchedulers } from '@angular/fire';\nimport { FIREBASE_OPTIONS, ɵfirebaseAppFactory } from '@angular/fire';\nimport { functions } from 'firebase/app';\n\nexport const ORIGIN = new InjectionToken<string>('angularfire2.functions.origin');\nexport const REGION = new InjectionToken<string>('angularfire2.functions.region');\n\n// override httpsCallable for compatibility with 5.x\nexport interface AngularFireFunctions extends Omit<ɵPromiseProxy<functions.Functions>, 'httpsCallable'> { };\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireFunctions {\n\n  public readonly httpsCallable: <T=any, R=any>(name: string) => (data: T) => Observable<R>\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    @Optional() @Inject(REGION) region:string|null,\n    @Optional() @Inject(ORIGIN) origin:string|null\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    const functions = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => import('firebase/functions')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.functions(region || undefined)),\n      tap(functions => {\n        if (origin) { functions.useFunctionsEmulator(origin) }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.httpsCallable = <T=any, R=any>(name: string) =>\n      (data: T) => from(functions).pipe(\n        observeOn(schedulers.outsideAngular),\n        switchMap(functions => functions.httpsCallable(name)(data)),\n        map(r => r.data as R)\n      )\n\n    return ɵlazySDKProxy(this, functions, zone);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireFunctions } from './functions';\n\n@NgModule({\n  providers: [ AngularFireFunctions ]\n})\nexport class AngularFireFunctionsModule { }\n"]}