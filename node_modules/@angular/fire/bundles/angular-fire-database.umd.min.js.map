{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@angular/fire/database/utils.ts","ng://@angular/fire/database/observable/fromRef.ts","ng://@angular/fire/database/list/changes.ts","ng://@angular/fire/database/list/utils.ts","ng://@angular/fire/database/list/snapshot-changes.ts","ng://@angular/fire/database/list/state-changes.ts","ng://@angular/fire/database/list/audit-trail.ts","ng://@angular/fire/database/list/data-operation.ts","ng://@angular/fire/database/list/create-reference.ts","ng://@angular/fire/database/list/remove.ts","ng://@angular/fire/database/object/snapshot-changes.ts","ng://@angular/fire/database/database.ts","ng://@angular/fire/database/object/create-reference.ts","ng://@angular/fire/database/database.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","isNil","obj","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","exportVal","isFirebaseDataSnapshot","Error","fromRef","event","listenType","scheduler","rxjs","asyncScheduler","Observable","subscriber","fn","snapshot","prevKey","schedule","complete","err","unsubscribe","off","pipe","map","payload","key","exists","type","share","listChanges","events","switchMap","snapshotAction","childEvent$","of","forEach","merge","apply","scan","buildView","distinctUntilChanged","positionFor","changes","len","current","action","currentKeyPosition","afterPreviousKeyPosition","positionAfter","prevKey_1","previous","filter","x","splice","slice","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","action$","lastKeyToLoad","child","loadedData","withLatestFrom","_a","_b","loaded","actions","loadedKeys","snap","skipWhile","meta","indexOf","waitForLoaded","createDataOperationMethod","operation","firebaseCase","snapshotCase","createListReference","afDatabase","outsideAngularScheduler","schedulers","outsideAngular","update","remove","keepUnstableUntilFirst","valueChanges","a","val","createObjectSnapshotChanges","URL","InjectionToken","AngularFireDatabase","options","nameOrConfig","databaseURL","platformId","zone","this","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","runOutsideAngular","ɵfirebaseAppFactory","undefined","prototype","list","pathOrRef","queryFn","object","createPushId","Injectable","args","providedIn","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","Object","decorators","PLATFORM_ID","NgZone","AngularFireDatabaseModule","NgModule","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Subscription, Scheduler } from 'rxjs';\nimport { PathReference, DatabaseReference, FirebaseOperation, FirebaseOperationCases } from './interfaces';\nimport { database } from 'firebase/app';\n\nexport function isString(value: any): boolean {\n  return typeof value === 'string';\n}\n\nexport function isFirebaseDataSnapshot(value: any): boolean {\n  return typeof value.exportVal === 'function';\n}\n\nexport function isNil(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\nexport function isFirebaseRef(value: any): boolean {\n  return typeof value.set === 'function';\n}\n\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param app - Firebase App\n * @param path - Database path, relative or absolute\n */\nexport function getRef(database: database.Database, pathRef: PathReference): DatabaseReference {\n  // if a db ref was passed in, just return it\n  return isFirebaseRef(pathRef) ? pathRef as DatabaseReference\n    : database.ref(pathRef as string);\n}\n\nexport function checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases) : Promise<void> {\n  if (isString(item)) {\n    return cases.stringCase();\n  } else if (isFirebaseRef(item)) {\n    return cases.firebaseCase!();\n  } else if (isFirebaseDataSnapshot(item)) {\n    return cases.snapshotCase!();\n  }\n  throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n","import { DatabaseQuery, DatabaseSnapshot, ListenEvent, AngularFireAction } from '../interfaces';\nimport { Observable, SchedulerLike, queueScheduler, asyncScheduler } from 'rxjs';\nimport { map, share } from 'rxjs/operators';\n\ninterface SnapshotPrevKey<T> {\n  snapshot: DatabaseSnapshot<T>;\n  prevKey: string | null | undefined;\n}\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nexport function fromRef<T>(ref: DatabaseQuery, event: ListenEvent, listenType = 'on', scheduler: SchedulerLike = asyncScheduler): Observable<AngularFireAction<DatabaseSnapshot<T>>> {\n  return new Observable<SnapshotPrevKey<T>>(subscriber => {\n    let fn: any | null = null;\n    fn = ref[listenType](event, (snapshot, prevKey) => {\n      scheduler.schedule(() => {\n        subscriber.next({ snapshot, prevKey });\n      });\n      if (listenType == 'once') {\n        scheduler.schedule(() => subscriber.complete());\n      }\n    }, err => {\n      scheduler.schedule(() => subscriber.error(err))\n    });\n\n    if (listenType == 'on') {\n      return {\n        unsubscribe() {\n          if (fn != null) {\n            ref.off(event, fn);\n          }\n        }\n      };\n    } else {\n      return { unsubscribe() { } };\n    }\n  }).pipe(\n    map(payload => {\n      const { snapshot, prevKey } = payload;\n      let key: string | null = null;\n      if (snapshot.exists()) { key = snapshot.key; }\n      return { type: event, payload: snapshot, prevKey, key };\n    }),\n    share()\n  );\n}\n","import { fromRef } from '../observable/fromRef';\nimport { Observable, of, merge, SchedulerLike } from 'rxjs';\n\nimport { DatabaseQuery, ChildEvent, SnapshotAction } from '../interfaces';\nimport { isNil } from '../utils';\n\nimport { switchMap, distinctUntilChanged, scan } from 'rxjs/operators';\n\nexport function listChanges<T=any>(ref: DatabaseQuery, events: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  return fromRef(ref, 'value', 'once', scheduler).pipe(\n    switchMap(snapshotAction => {\n      const childEvent$ = [of(snapshotAction)];\n      events.forEach(event => childEvent$.push(fromRef(ref, event, 'on', scheduler)));\n      return merge(...childEvent$).pipe(scan(buildView, []))\n    }),\n    distinctUntilChanged()\n  );\n}\n\nfunction positionFor<T>(changes: SnapshotAction<T>[], key) {\n  const len = changes.length;\n  for(let i=0; i<len; i++) {\n    if(changes[i].payload.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction positionAfter<T>(changes: SnapshotAction<T>[], prevKey?: string) {\n  if(isNil(prevKey)) {\n    return 0;\n  } else {\n    const i = positionFor(changes, prevKey);\n    if( i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  const { payload, type, prevKey, key } = action;\n  const currentKeyPosition = positionFor(current, key);\n  const afterPreviousKeyPosition = positionAfter(current, prevKey);\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        let prevKey = null;\n        action.payload.forEach(payload => {\n          const action = {payload, type: 'value', prevKey, key: payload.key};\n          prevKey = payload.key;\n          current = [...current, action];\n          return false;\n        });\n      }\n      return current;\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        const previous = current[currentKeyPosition - 1];\n        if ((previous && previous.key || null) != prevKey) {\n          current = current.filter(x => x.payload.key !== payload.key);\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action, ...current];\n      } else {\n        current = current.slice()\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n      return current;\n    case 'child_removed':\n      return current.filter(x => x.payload.key !== payload.key);\n    case 'child_changed':\n      return current.map(x => x.payload.key === key ? action : x);\n    case 'child_moved':\n      if(currentKeyPosition > -1) {\n        const data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice()\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n","import { isNil } from '../utils';\n\nexport function validateEventsArray(events?: any[]) {\n  if(isNil(events) || events!.length === 0) {\n    events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n  }\n  return events;\n}","import { Observable, SchedulerLike } from 'rxjs';\nimport { listChanges } from './changes';\nimport { DatabaseQuery, ChildEvent, SnapshotAction } from '../interfaces';\nimport { validateEventsArray } from './utils';\n\nexport function snapshotChanges<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  events = validateEventsArray(events);\n  return listChanges<T>(query, events!, scheduler);\n}\n","import { DatabaseQuery, ChildEvent, AngularFireAction, SnapshotAction } from '../interfaces';\nimport { fromRef } from '../observable/fromRef';\nimport { validateEventsArray } from './utils';\nimport { SchedulerLike, Observable, merge } from 'rxjs';\nimport { DatabaseSnapshot } from '../interfaces';\n\nexport function stateChanges<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike) {\n  events = validateEventsArray(events)!;\n  const childEvent$ = events.map(event => fromRef<T>(query, event, 'on', scheduler));\n  return merge(...childEvent$);\n}\n","import { DataSnapshot, DatabaseQuery, ChildEvent, DatabaseSnapshot, AngularFireAction, SnapshotAction } from '../interfaces';\nimport { stateChanges } from './state-changes';\nimport { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\n\nimport { skipWhile, withLatestFrom, map, scan } from 'rxjs/operators';\n\nexport function auditTrail<T>(query: DatabaseQuery, events?: ChildEvent[], scheduler?: SchedulerLike): Observable<SnapshotAction<T>[]> {\n  const auditTrail$ = stateChanges<T>(query, events)\n    .pipe(\n      scan((current, action) => [...current, action], [])\n    );\n  return waitForLoaded<T>(query, auditTrail$, scheduler);\n}\n\ninterface LoadedMetadata {\n  data: AngularFireAction<DataSnapshot>;\n  lastKeyToLoad: any;\n}\n\nfunction loadedData<T>(query: DatabaseQuery, scheduler?: SchedulerLike): Observable<LoadedMetadata> {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef<T>(query, 'value', 'on', scheduler)\n  .pipe(\n    map(data => {\n      // Store the last key in the data set\n      let lastKeyToLoad;\n      // Loop through loaded dataset to find the last key\n      data.payload.forEach(child => {\n        lastKeyToLoad = child.key; return false;\n      });\n      // return data set and the current last key loaded\n      return { data, lastKeyToLoad };\n    })\n  );\n}\n\nfunction waitForLoaded<T>(query: DatabaseQuery, action$: Observable<SnapshotAction<T>[]>, scheduler?: SchedulerLike) {\n  const loaded$ = loadedData<T>(query, scheduler);\n  return loaded$\n    .pipe(\n      withLatestFrom(action$),\n      // Get the latest values from the \"loaded\" and \"child\" datasets\n      // We can use both datasets to form an array of the latest values.\n      map(([loaded, actions]) => {\n        // Store the last key in the data set\n        let lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        const loadedKeys = actions.map(snap => snap.key);\n        return { actions, lastKeyToLoad, loadedKeys }\n      }),\n      // This is the magical part, only emit when the last load key\n      // in the dataset has been loaded by a child event. At this point\n      // we can assume the dataset is \"whole\".\n      skipWhile(meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1),\n      // Pluck off the meta data because the user only cares\n      // to iterate through the snapshots\n      map(meta => meta.actions)\n    );\n}\n","\nimport { DatabaseReference, FirebaseOperation, DatabaseSnapshot } from '../interfaces';\nimport { checkOperationCases } from '../utils';\n\nexport function createDataOperationMethod<T>(ref: DatabaseReference, operation: string) {\n  return function dataOperation<T>(item: FirebaseOperation, value: T) {\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(<string>item)[operation](value),\n      firebaseCase: () => (<DatabaseReference>item)[operation](value),\n      snapshotCase: () => (<DatabaseSnapshot<T>>item).ref[operation](value)\n    });\n  }\n}\n","import { DatabaseQuery, AngularFireList, ChildEvent } from '../interfaces';\nimport { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { AngularFireDatabase } from '../database';\nimport { map } from 'rxjs/operators';\n\nexport function createListReference<T=any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireList<T> {\n  const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n  return {\n    query,\n    update: createDataOperationMethod<Partial<T>>(query.ref, 'update'),\n    set: createDataOperationMethod<T>(query.ref, 'set'),\n    push: (data: T) => query.ref.push(data),\n    remove: createRemoveMethod(query.ref),\n    snapshotChanges(events?: ChildEvent[]) {\n      return snapshotChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    stateChanges(events?: ChildEvent[]) {\n      return stateChanges<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    auditTrail(events?: ChildEvent[]) {\n      return auditTrail<T>(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n    },\n    valueChanges(events?: ChildEvent[]) {\n      const snapshotChanges$ = snapshotChanges<T>(query, events, outsideAngularScheduler);\n      return snapshotChanges$.pipe(\n        map(actions => actions.map(a => a.payload.val() as T)),\n        afDatabase.keepUnstableUntilFirst\n      );\n    }\n  }\n}\n","import { DatabaseReference, DataSnapshot, FirebaseOperation, DatabaseSnapshot } from '../interfaces';\nimport { checkOperationCases } from '../utils';\nimport { database } from 'firebase/app';\n\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\nexport function createRemoveMethod<T>(ref: DatabaseReference) {\n  return function remove(item?: FirebaseOperation): any {\n    if(!item) { return ref.remove(); }\n    return checkOperationCases(item, {\n      stringCase: () => ref.child(<string>item).remove(),\n      firebaseCase: () => (<DatabaseReference>item).remove(),\n      snapshotCase: () => (<DatabaseSnapshot<T>>item).ref.remove()\n    });\n  }\n}\n","import { Observable, SchedulerLike } from 'rxjs';\nimport { fromRef } from '../observable/fromRef';\nimport { DatabaseQuery, SnapshotAction } from '../interfaces';\n\nexport function createObjectSnapshotChanges<T>(query: DatabaseQuery, scheduler?: SchedulerLike) {\n  return function snapshotChanges(): Observable<SnapshotAction<T>> {\n    return fromRef(query, 'value', 'on', scheduler);\n  }\n}\n","import { Injectable, Inject, Optional, NgZone, PLATFORM_ID, InjectionToken } from '@angular/core';\nimport { DatabaseQuery, PathReference, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { FirebaseOptions, FirebaseAppConfig, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵfirebaseAppFactory, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nimport { Observable } from 'rxjs';\nimport { database } from 'firebase/app';\nimport 'firebase/database';\n\nexport const URL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL')\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireDatabase {\n  public readonly database: database.Database;\n\n  public readonly schedulers: ɵAngularFireSchedulers;\n  public readonly keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(URL) databaseURL:string|null,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n\n    this.database = zone.runOutsideAngular(() => {\n      const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.database, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if(queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\n    const ref = getRef(this.database, pathOrRef);\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n","import { map } from 'rxjs/operators';\nimport { DatabaseQuery, AngularFireObject } from '../interfaces';\nimport { createObjectSnapshotChanges } from './snapshot-changes';\nimport { AngularFireDatabase } from '../database';\n\nexport function createObjectReference<T=any>(query: DatabaseQuery, afDatabase: AngularFireDatabase): AngularFireObject<T> {\n  return {\n    query,\n    snapshotChanges<T>() {\n      return createObjectSnapshotChanges<T>(query, afDatabase.schedulers.outsideAngular)().pipe(\n        afDatabase.keepUnstableUntilFirst!\n      );\n    },\n    update(data: Partial<T>) { return query.ref.update(data as any) as Promise<void>; },\n    set(data: T) { return query.ref.set(data) as Promise<void>; },\n    remove() { return query.ref.remove() as Promise<void>; },\n    valueChanges<T>() {\n      const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n      return snapshotChanges$.pipe(\n        afDatabase.keepUnstableUntilFirst,\n        map(action => action.payload.exists() ? action.payload.val() as T : null)\n      )\n    },\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireDatabase } from './database';\n\n@NgModule({\n  providers: [ AngularFireDatabase ]\n})\nexport class AngularFireDatabaseModule { }\n"]}