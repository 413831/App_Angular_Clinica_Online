{"version":3,"file":"angular-fire-storage.umd.js","sources":["ng://@angular/fire/storage/observable/fromTask.ts","ng://@angular/fire/storage/task.ts","ng://@angular/fire/storage/ref.ts","ng://@angular/fire/storage/storage.ts","ng://@angular/fire/storage/storage.module.ts"],"sourcesContent":["import { Observable } from 'rxjs';\nimport { UploadTask, UploadTaskSnapshot } from '../interfaces';\nimport { storage } from 'firebase/app';\n\nexport function fromTask(task: UploadTask) {\n  return new Observable<UploadTaskSnapshot>(subscriber => {\n    const progress = (snap: UploadTaskSnapshot) => subscriber.next(snap);\n    const error = e => subscriber.error(e);\n    const complete = () => subscriber.complete();\n    task.on('state_changed', progress, error, complete);\n    return () => task.cancel();\n  });\n}\n","import { UploadTaskSnapshot, UploadTask } from './interfaces';\nimport { fromTask } from './observable/fromTask';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface AngularFireUploadTask {\n  task: UploadTask,\n  snapshotChanges(): Observable<UploadTaskSnapshot | undefined>;\n  percentageChanges(): Observable<number | undefined>;\n  pause(): boolean;\n  cancel(): boolean;\n  resume(): boolean;\n  then(\n    onFulfilled?: ((a: UploadTaskSnapshot) => any) | null, \n    onRejected?: ((a: Error) => any) | null\n  ): Promise<any>;\n  catch(onRejected: (a: Error) => any): Promise<any>;\n}\n\n/**\n * Create an AngularFireUploadTask from a regular UploadTask from the Storage SDK.\n * This method creates an observable of the upload and returns on object that provides\n * multiple methods for controlling and monitoring the file upload.\n * @param task \n */\nexport function createUploadTask(task: UploadTask): AngularFireUploadTask {\n  const inner$ = fromTask(task);\n  return {\n    task: task,\n    then: task.then.bind(task),\n    catch: task.catch.bind(task),\n    pause: task.pause.bind(task),\n    cancel: task.cancel.bind(task),\n    resume: task.resume.bind(task),\n    snapshotChanges: () => inner$,\n    percentageChanges: () => inner$.pipe(\n      map(s => s.bytesTransferred / s.totalBytes * 100)\n    )\n  };\n}\n","import { SettableMetadata, UploadMetadata, Reference, StringFormat, ListResult} from './interfaces';\nimport { createUploadTask, AngularFireUploadTask } from './task';\nimport { Observable, from, of } from 'rxjs';\nimport { ɵAngularFireSchedulers } from '@angular/fire';\nimport { observeOn, switchMap } from 'rxjs/operators';\n\nexport interface AngularFireStorageReference {\n  getDownloadURL(): Observable<any>;\n  getMetadata(): Observable<any>;\n  delete(): Observable<any>;\n  child(path: string): any;\n  updateMetadata(meta: SettableMetadata): Observable<any>;\n  put(data: any, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\n  putString(data: string, format?: string | undefined, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\n  listAll(): Observable<ListResult>;\n}\n\n/**\n * Create an AngularFire wrapped Storage Reference. This object\n * creates observable methods from promise based methods.\n * @param ref\n */\nexport function createStorageRef(\n  ref: Reference,\n  schedulers: ɵAngularFireSchedulers,\n  keepUnstableUntilFirst: <T>(obs$: Observable<T>) => Observable<T>\n): AngularFireStorageReference {\n  return {\n    getDownloadURL: () => of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => ref.getDownloadURL()),\n      keepUnstableUntilFirst\n    ),\n    getMetadata: () => of().pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => ref.getMetadata()),\n      keepUnstableUntilFirst\n    ),\n    delete: () => from(ref.delete()),\n    child: (path: string) => createStorageRef(ref.child(path), schedulers, keepUnstableUntilFirst),\n    updateMetadata: (meta: SettableMetadata) => from(ref.updateMetadata(meta)),\n    put: (data: any, metadata?: UploadMetadata) => {\n      const task = ref.put(data, metadata);\n      return createUploadTask(task);\n    },\n    putString: (data: string, format?: StringFormat, metadata?: UploadMetadata) => {\n      const task = ref.putString(data, format, metadata);\n      return createUploadTask(task);\n    },\n    listAll: () => from(ref.listAll())\n  };\n}\n","import { Injectable, Inject, Optional, InjectionToken, NgZone, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef } from './ref';\nimport { Observable } from 'rxjs';\nimport { FirebaseOptions, FirebaseAppConfig, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵkeepUnstableUntilFirstFactory, ɵAngularFireSchedulers } from '@angular/fire';\nimport { UploadMetadata } from './interfaces';\nimport { storage } from 'firebase/app';\nimport 'firebase/storage';\n\nexport const BUCKET = new InjectionToken<string>('angularfire2.storageBucket');\n\n/**\n * AngularFireStorage Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for uploading and downloading binary files from Cloud Storage for\n * Firebase.\n */\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireStorage {\n  public readonly storage: storage.Storage;\n\n  public readonly keepUnstableUntilFirst: <T>(obs: Observable<T>) => Observable<T>;\n  public readonly schedulers: ɵAngularFireSchedulers;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(BUCKET) storageBucket:string|null,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.schedulers = new ɵAngularFireSchedulers(zone);\n    this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n\n    this.storage = zone.runOutsideAngular(() => {\n      const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n      return app.storage(storageBucket || undefined);\n    });\n  }\n\n  ref(path: string) {\n    return createStorageRef(this.storage.ref(path), this.schedulers, this.keepUnstableUntilFirst);\n  }\n\n  upload(path: string, data: any, metadata?: UploadMetadata) {\n    const storageRef = this.storage.ref(path);\n    const ref = createStorageRef(storageRef, this.schedulers, this.keepUnstableUntilFirst);\n    return ref.put(data, metadata);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireStorage } from './storage';\n\n@NgModule({\n  providers: [ AngularFireStorage ]\n})\nexport class AngularFireStorageModule { }\n"],"names":["Observable","map","of","observeOn","switchMap","from","InjectionToken","ɵAngularFireSchedulers","ɵkeepUnstableUntilFirstFactory","ɵfirebaseAppFactory","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","PLATFORM_ID","NgZone","NgModule"],"mappings":"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"}