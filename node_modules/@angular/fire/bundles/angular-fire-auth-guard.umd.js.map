{"version":3,"file":"angular-fire-auth-guard.umd.js","sources":["ng://@angular/fire/auth-guard/auth-guard.ts","ng://@angular/fire/auth-guard/auth-guard.module.ts"],"sourcesContent":["import { Injectable, Inject, Optional, NgZone } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take, observeOn, shareReplay } from 'rxjs/operators'\nimport { User } from 'firebase/app';\nimport { ɵAngularFireSchedulers, FirebaseOptions, FirebaseAppConfig, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵfirebaseAppFactory } from '@angular/fire';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<User|null>, Observable<boolean|any[]>>;\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  authState: Observable<User|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    private router: Router\n  ) {\n    const auth = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      observeOn(new ɵAngularFireSchedulers(zone).insideAngular),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.auth()),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth)))\n    );\n  }\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.authState.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => typeof can == \"boolean\" ? can : this.router.createUrlTree(<any[]>can))\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n    canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\nexport const loggedIn: AuthPipe = map(user => !!user);\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim = (claim:string) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo = (redirect: any[]) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo = (redirect: any[]) =>  pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"],"names":["take","map","of","observeOn","ɵAngularFireSchedulers","switchMap","ɵfirebaseAppFactory","shareReplay","Observable","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","NgZone","Router","pipe","NgModule"],"mappings":"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"}