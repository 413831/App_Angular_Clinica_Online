{"version":3,"file":"angular-fire-performance.js","sources":["ng:/@angular/fire/performance/performance.ts","ng:/@angular/fire/performance/performance.service.ts","ng:/@angular/fire/performance/performance.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone, InjectionToken, Inject, Optional, PLATFORM_ID } from '@angular/core';\nimport { Observable, Subscription, of, empty } from 'rxjs';\nimport { tap, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp, ɵPromiseProxy, ɵlazySDKProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends ɵPromiseProxy<performance.Performance> {};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n  \n  private readonly performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled:boolean|null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled:boolean|null,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) platformId:Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : empty()),\n      map(() => zone.runOutsideAngular(() => app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled == false) { performance.instrumentationEnabled = false }\n        if (dataCollectionEnabled == false) { performance.dataCollectionEnabled = false }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n}\n\nconst trace$ = (traceId:string) => {\n  if (typeof window !== 'undefined' && window.performance) {\n    const entries = window.performance.getEntriesByName(traceId, 'measure') || [];\n    const startMarkName = `_${traceId}Start[${entries.length}]`;\n    const endMarkName = `_${traceId}End[${entries.length}]`;\n    return new Observable<void>(emitter => {\n      window.performance.mark(startMarkName);\n      emitter.next();\n      return { unsubscribe: () => {\n        window.performance.mark(endMarkName);\n        window.performance.measure(traceId, startMarkName, endMarkName);\n      }};\n    });\n  } else {\n    return empty();\n  }\n}\n\nexport const traceUntil = <T=any>(name:string, test: (a:T) => boolean, options?: { orComplete?: boolean }) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      a  => test(a) && traceSubscription.unsubscribe(),\n      () => {},\n      () => options && options.orComplete && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceWhile = <T=any>(name:string, test: (a:T) => boolean, options?: { orComplete?: boolean}) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  let traceSubscription: Subscription|undefined;\n  return source$.pipe(\n    tap(\n      a  => {\n        if (test(a)) {\n          traceSubscription = traceSubscription || trace$(name).subscribe();\n        } else {\n          traceSubscription && traceSubscription.unsubscribe();\n          traceSubscription = undefined;\n        }\n      },\n      () => {},\n      () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilComplete = <T=any>(name:string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => {},\n      () => {},\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n\nexport const traceUntilFirst = <T=any>(name:string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {},\n      () => {}\n    )\n  ).subscribe(subscriber);\n});\n\nexport const trace = <T=any>(name:string) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n  const traceSubscription = trace$(name).subscribe();\n  return source$.pipe(\n    tap(\n      () => traceSubscription.unsubscribe(),\n      () => {},\n      () => traceSubscription.unsubscribe()\n    )\n  ).subscribe(subscriber);\n});\n","import { Injectable, OnDestroy, ApplicationRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first, tap } from 'rxjs/operators';\n\nconst IS_STABLE_START_MARK = '_isStableStart';\nconst IS_STABLE_END_MARK = '_isStableEnd';\n\nfunction markStarts() {\n    if (typeof(window) !== \"undefined\" && window.performance) {\n        window.performance.mark(IS_STABLE_START_MARK);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nconst started = markStarts();\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class PerformanceMonitoringService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    constructor(appRef: ApplicationRef) {\n        if (started) {\n            this.disposable = appRef.isStable.pipe(\n                first(it => it),\n                tap(() => {\n                    window.performance.mark(IS_STABLE_END_MARK);\n                    window.performance.measure('isStable', IS_STABLE_START_MARK, IS_STABLE_END_MARK);\n                })\n            ).subscribe();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n\n}","import { NgModule, Optional } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\nimport { PerformanceMonitoringService } from './performance.service';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(\n    perf: AngularFirePerformance,\n    @Optional() _: PerformanceMonitoringService\n  ) {\n    // call anything here to get perf loading\n    perf.dataCollectionEnabled\n  }\n}\n"]}