{"version":3,"file":"angular-fire-auth.js","sources":["ng:/@angular/fire/auth/auth.ts","ng:/@angular/fire/auth/auth.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { Observable, of, from } from 'rxjs';\nimport { switchMap, map, observeOn, shareReplay } from 'rxjs/operators';\nimport { FIREBASE_OPTIONS, FIREBASE_APP_NAME, FirebaseOptions, FirebaseAppConfig, ɵPromiseProxy, ɵlazySDKProxy, ɵfirebaseAppFactory, ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory } from '@angular/fire';\nimport { User, auth } from 'firebase/app';\n\nexport interface AngularFireAuth extends ɵPromiseProxy<auth.Auth> {};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuth {\n\n  /**\n   * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n   */\n  public readonly authState: Observable<User|null>;\n\n  /**\n   * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n   */\n  public readonly idToken: Observable<string|null>;\n\n  /**\n   * Observable of the currently signed-in user (or null).\n   */\n  public readonly user: Observable<User|null>;\n\n  /**\n   * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n   * helper properties for getting different data associated with the token as well as all the decoded payload claims\n   * (or null).\n   */\n  public readonly idTokenResult: Observable<auth.IdTokenResult|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n    const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers, platformId);\n\n    const auth = of(undefined).pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.auth()),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n      keepUnstableUntilFirst\n    );\n\n    this.user = auth.pipe(\n      observeOn(schedulers.outsideAngular),\n      switchMap(auth => new Observable<User|null>(auth.onIdTokenChanged.bind(auth))),\n      keepUnstableUntilFirst\n    );\n\n    this.idToken = this.user.pipe(\n      switchMap(user => user ? from(user.getIdToken()) : of(null))\n    );\n\n    this.idTokenResult = this.user.pipe(\n      switchMap(user => user ? from(user.getIdTokenResult()) : of(null))\n    );\n\n    return ɵlazySDKProxy(this, auth, zone);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuth } from './auth';\n\n@NgModule({\n  providers: [ AngularFireAuth ]\n})\nexport class AngularFireAuthModule { }\n"]}