{"version":3,"file":"angular-fire.js","sources":["ng:/@angular/fire/angularfire2.ts","ng:/@angular/fire/firebase.app.module.ts"],"names":["firebase.apps","firebase.initializeApp","firebase.registerVersion","NG_VERSION"],"mappings":"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","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Observable, Subscription, SchedulerLike, SchedulerAction, queueScheduler, Operator, Subscriber, TeardownLogic, asyncScheduler } from 'rxjs';\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\n\nfunction noop() { }\n\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\nexport class ɵZoneScheduler implements SchedulerLike {\n  constructor(private zone: any, private delegate: any = queueScheduler) { }\n\n  now() {\n    return this.delegate.now();\n  }\n\n  schedule(work: (this: SchedulerAction<any>, state?: any) => void, delay?: number, state?: any): Subscription {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function (this: SchedulerAction<any>, state: any) {\n      targetZone.runGuarded(() => {\n        work.apply(this, [state]);\n      });\n    }\n\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state)\n  }\n}\n\nexport class ɵBlockUntilFirstOperator<T> implements Operator<T, T> {\n  private task: MacroTask | null = null;\n\n  constructor(private zone: any) { }\n\n  call(subscriber: Subscriber<T>, source: Observable<T>): TeardownLogic {\n    const unscheduleTask = this.unscheduleTask.bind(this);\n    this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n\n    return source.pipe(\n      tap(unscheduleTask, unscheduleTask, unscheduleTask)\n    ).subscribe(subscriber).add(unscheduleTask);\n  }\n\n  private unscheduleTask() {\n    // maybe this is a race condition, invoke in a timeout\n    // hold for 10ms while I try to figure out what is going on    \n    setTimeout(() => {\n      if (this.task != null && this.task.state === 'scheduled') {\n        this.task.invoke();\n        this.task = null;\n      }\n    }, 10);\n  }\n}\n\nexport class ɵAngularFireSchedulers {\n  public readonly outsideAngular: ɵZoneScheduler;\n  public readonly insideAngular: ɵZoneScheduler;\n\n  constructor(public ngZone: NgZone) {\n    this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n    this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n  }\n}\n\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n */\nexport function ɵkeepUnstableUntilFirstFactory(\n  schedulers: ɵAngularFireSchedulers,\n  platformId: Object\n) {\n  return function keepUnstableUntilFirst<T>(obs$: Observable<T>): Observable<T> {\n    obs$ = obs$.lift(\n      new ɵBlockUntilFirstOperator(schedulers.ngZone)\n    );\n\n    return obs$.pipe(\n      // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n      subscribeOn(schedulers.outsideAngular),\n      // Run operators inside the angular zone (e.g. side effects via tap())\n      observeOn(schedulers.insideAngular)\n      // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n      // share()\n    );\n  }\n}\n\ntype FunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? K : never }[keyof T];\ntype PromiseReturningFunctionPropertyNames<T> = { [K in FunctionPropertyNames<T>]: ReturnType<T[K]> extends Promise<any> ? K : never }[FunctionPropertyNames<T>];\ntype NonPromiseReturningFunctionPropertyNames<T> = { [K in FunctionPropertyNames<T>]: ReturnType<T[K]> extends Promise<any> ? never : K }[FunctionPropertyNames<T>];\ntype NonFunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? never : K }[keyof T];\n\nexport type ɵPromiseProxy<T> = { [K in NonFunctionPropertyNames<T>]: Promise<T[K]> } &\n  { [K in NonPromiseReturningFunctionPropertyNames<T>]: (...args: Parameters<T[K]>) => Promise<ReturnType<T[K]>> } &\n  { [K in PromiseReturningFunctionPropertyNames<T>   ]: (...args: Parameters<T[K]>) => ReturnType<T[K]> };\n\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nexport const ɵlazySDKProxy = (klass: any, observable: Observable<any>, zone: NgZone) => {\n  return new Proxy(klass, {\n    get: (_, name:string) => zone.runOutsideAngular(() => {\n      if (klass[name]) { return klass[name] }\n      if (noopFunctions.includes(name)) { return () => {} }\n      let promise = observable.toPromise().then(mod => {\n        const ret = mod && mod[name];\n        // TODO move to proper type guards\n        if (typeof ret == 'function') {\n          return ret.bind(mod);\n        } else if (ret && ret.then) {\n          return ret.then((res:any) => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      // recurse the proxy\n      return new Proxy(() => undefined, {\n          get: (_, name) => promise[name],\n          // TODO handle callbacks as transparently as I can \n          apply: (self, _, args) => promise.then(it => it && it(...args))\n        }\n      )\n    })\n  })\n};","import { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, PLATFORM_ID, Inject } from '@angular/core';\nimport { app, auth, database, messaging, storage, firestore, functions, analytics, performance, remoteConfig } from 'firebase/app';\nimport * as firebase from 'firebase/app';\n\n// INVESTIGATE Public types don't expose FirebaseOptions or FirebaseAppConfig, is this the case anylonger?\nexport interface FirebaseOptions {[key:string]: any};\nexport interface FirebaseAppConfig {[key:string]: any};\n\nexport const FIREBASE_OPTIONS = new InjectionToken<FirebaseOptions>('angularfire2.app.options');\nexport const FIREBASE_APP_NAME = new InjectionToken<string|FirebaseAppConfig|undefined>('angularfire2.app.nameOrConfig');\n\n// Have to implement as we need to return a class from the provider, we should consider exporting\n// this in the firebase/app types as this is our highest risk of breaks\nexport class FirebaseApp implements Partial<app.App> {\n    name: string;\n    options: {};\n    analytics: () => analytics.Analytics;\n    auth: () => auth.Auth;\n    database: (databaseURL?: string) => database.Database;\n    messaging: () => messaging.Messaging;\n    performance: () => performance.Performance;\n    storage: (storageBucket?: string) => storage.Storage;\n    delete: () => Promise<void>;\n    firestore: () => firestore.Firestore;\n    functions: (region?: string) => functions.Functions;\n    remoteConfig: () => remoteConfig.RemoteConfig;\n}\n\nexport const VERSION = new Version('ANGULARFIRE2_VERSION');\n\nexport function ɵfirebaseAppFactory(options: FirebaseOptions, zone: NgZone, nameOrConfig?: string|FirebaseAppConfig|null) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    // Added any due to some inconsistency between @firebase/app and firebase types\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0] as any;\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n    return (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config as any))) as FirebaseApp;\n}\n\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: ɵfirebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\n \n@NgModule({\n    providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n    static initializeApp(options: FirebaseOptions, nameOrConfig?: string | FirebaseAppConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        }\n    }\n    constructor(@Inject(PLATFORM_ID) platformId:Object ) {\n        firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n        firebase.registerVersion('angular', NG_VERSION.full);\n    }\n}"]}