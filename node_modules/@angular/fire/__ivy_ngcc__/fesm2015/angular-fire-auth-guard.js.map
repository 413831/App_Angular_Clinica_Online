{"version":3,"file":"angular-fire-auth-guard.js","sources":["ng:/@angular/fire/auth-guard/auth-guard.ts","ng:/@angular/fire/auth-guard/auth-guard.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, Optional, NgZone } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take, observeOn, shareReplay } from 'rxjs/operators'\nimport { User } from 'firebase/app';\nimport { ɵAngularFireSchedulers, FirebaseOptions, FirebaseAppConfig, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵfirebaseAppFactory } from '@angular/fire';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<User|null>, Observable<boolean|any[]>>;\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  authState: Observable<User|null>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    zone: NgZone,\n    private router: Router\n  ) {\n    const auth = of(undefined).pipe(\n      observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n      switchMap(() => zone.runOutsideAngular(() => import('firebase/auth'))),\n      observeOn(new ɵAngularFireSchedulers(zone).insideAngular),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.auth()),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    this.authState = auth.pipe(\n      switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth)))\n    );\n  }\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.authState.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => typeof can == \"boolean\" ? can : this.router.createUrlTree(<any[]>can))\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n    canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\nexport const loggedIn: AuthPipe = map(user => !!user);\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim = (claim:string) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo = (redirect: any[]) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo = (redirect: any[]) =>  pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}