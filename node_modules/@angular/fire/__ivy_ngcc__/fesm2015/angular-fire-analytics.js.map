{"version":3,"file":"angular-fire-analytics.js","sources":["ng:/@angular/fire/analytics/analytics.ts","ng:/@angular/fire/analytics/analytics.service.ts","ng:/@angular/fire/analytics/analytics.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, Optional, NgZone, InjectionToken, PLATFORM_ID } from '@angular/core';\nimport { of, empty, Observable } from 'rxjs';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, tap, shareReplay, switchMap, observeOn } from 'rxjs/operators';\nimport { FirebaseAppConfig, FirebaseOptions, ɵAngularFireSchedulers, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME, ɵfirebaseAppFactory, ɵPromiseProxy } from '@angular/fire';\nimport { analytics } from 'firebase';\n\nexport interface Config {[key:string]: any};\n\nexport const COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.analytics.analyticsCollectionEnabled');\nexport const APP_VERSION = new InjectionToken<string>('angularfire2.analytics.appVersion');\nexport const APP_NAME = new InjectionToken<string>('angularfire2.analytics.appName');\nexport const DEBUG_MODE = new InjectionToken<boolean>('angularfire2.analytics.debugMode');\nexport const CONFIG = new InjectionToken<Config>('angularfire2.analytics.config');\n\nconst APP_NAME_KEY = 'app_name';\nconst APP_VERSION_KEY = 'app_version';\nconst DEBUG_MODE_KEY = 'debug_mode';\nconst ANALYTICS_ID_FIELD = 'measurementId';\nconst GTAG_CONFIG_COMMAND = 'config';\nconst GTAG_FUNCTION_NAME = 'gtag';\nconst DATA_LAYER_NAME = 'dataLayer';\n\nexport interface AngularFireAnalytics extends ɵPromiseProxy<analytics.Analytics> {};\n\nlet gtag: (...args: any[]) => void;\nlet analyticsInitialized: Promise<void>;\nconst analyticsInstanceCache: {[key:string]: Observable<analytics.Analytics>} = {};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAnalytics {\n\n  async updateConfig(config: Config) {\n    await analyticsInitialized;\n    gtag(GTAG_CONFIG_COMMAND, this.options[ANALYTICS_ID_FIELD], { ...config, update: true });\n  };\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) private options:FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(COLLECTION_ENABLED) analyticsCollectionEnabled:boolean|null,\n    @Optional() @Inject(APP_VERSION) providedAppVersion:string|null,\n    @Optional() @Inject(APP_NAME) providedAppName:string|null,\n    @Optional() @Inject(DEBUG_MODE) debugModeEnabled:boolean|null,\n    @Optional() @Inject(CONFIG) providedConfig:Config|null,\n    @Inject(PLATFORM_ID) platformId:Object,\n    zone: NgZone\n  ) {\n\n    if (!analyticsInitialized) {\n      if (isPlatformBrowser(platformId)) {\n        gtag = window[GTAG_FUNCTION_NAME] || function() { window[DATA_LAYER_NAME].push(arguments) };\n        window[DATA_LAYER_NAME] = window[DATA_LAYER_NAME] || [];\n        analyticsInitialized = zone.runOutsideAngular(() =>\n          new Promise(resolve => {\n            window[GTAG_FUNCTION_NAME] = (...args: any[]) => {\n              if (args[0] == 'js') { resolve() }\n              gtag(...args);\n            }\n          })\n        );\n      } else {\n        gtag = () => {};\n        analyticsInitialized = Promise.resolve();\n      }\n    }\n\n    let analytics = analyticsInstanceCache[options[ANALYTICS_ID_FIELD]];\n    if (!analytics) {\n      analytics = of(undefined).pipe(\n        observeOn(new ɵAngularFireSchedulers(zone).outsideAngular),\n        switchMap(() => isPlatformBrowser(platformId) ? import('firebase/analytics') : empty()),\n        map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n        map(app => app.analytics()),\n        tap(analytics => {\n          if (analyticsCollectionEnabled === false) { analytics.setAnalyticsCollectionEnabled(false) }\n        }),\n        shareReplay({ bufferSize: 1, refCount: false }),\n      );\n      analyticsInstanceCache[options[ANALYTICS_ID_FIELD]] = analytics;\n    }\n\n    if (providedConfig)     { this.updateConfig(providedConfig) }\n    if (providedAppName)    { this.updateConfig({ [APP_NAME_KEY]:    providedAppName }) }\n    if (providedAppVersion) { this.updateConfig({ [APP_VERSION_KEY]: providedAppVersion }) }\n    if (debugModeEnabled)   { this.updateConfig({ [DEBUG_MODE_KEY]:  1 }) }\n\n    return ɵlazySDKProxy(this, analytics, zone);\n\n  }\n\n}","import { Injectable, Optional, NgZone, OnDestroy, ComponentFactoryResolver, Inject, PLATFORM_ID, Injector, NgModuleFactory } from '@angular/core';\nimport { Subscription, from, Observable, of } from 'rxjs';\nimport { filter, withLatestFrom, switchMap, map, tap, pairwise, startWith, groupBy, mergeMap, observeOn } from 'rxjs/operators';\nimport { Router, NavigationEnd, ActivationEnd, ROUTES } from '@angular/router';\nimport { ɵAngularFireSchedulers } from '@angular/fire';\nimport { AngularFireAnalytics, DEBUG_MODE } from './analytics';\nimport { User } from 'firebase/app';\nimport { Title } from '@angular/platform-browser';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\nconst FIREBASE_EVENT_ORIGIN_KEY = 'firebase_event_origin';\nconst FIREBASE_PREVIOUS_SCREEN_CLASS_KEY = 'firebase_previous_class';\nconst FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY  = 'firebase_previous_id';\nconst FIREBASE_PREVIOUS_SCREEN_NAME_KEY = 'firebase_previous_screen';\nconst FIREBASE_SCREEN_CLASS_KEY = 'firebase_screen_class';\nconst FIREBASE_SCREEN_INSTANCE_ID_KEY = 'firebase_screen_id';\nconst FIREBASE_SCREEN_NAME_KEY = 'firebase_screen';\nconst OUTLET_KEY = 'outlet';\nconst PAGE_PATH_KEY = 'page_path';\nconst PAGE_TITLE_KEY = 'page_title';\nconst SCREEN_CLASS_KEY = 'screen_class';\nconst SCREEN_NAME_KEY = 'screen_name';\n\nconst SCREEN_VIEW_EVENT = 'screen_view';\nconst EVENT_ORIGIN_AUTO = 'auto';\nconst DEFAULT_SCREEN_CLASS = '???';\nconst NG_PRIMARY_OUTLET = 'primary';\nconst SCREEN_INSTANCE_DELIMITER = '#';\n\nconst ANNOTATIONS = '__annotations__';\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class ScreenTrackingService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n  \n    constructor(\n      analytics: AngularFireAnalytics,\n      @Optional() router:Router,\n      @Optional() title:Title,\n      componentFactoryResolver: ComponentFactoryResolver,\n      @Inject(PLATFORM_ID) platformId:Object,\n      @Optional() @Inject(DEBUG_MODE) debugModeEnabled:boolean|null,\n      zone: NgZone,\n      injector: Injector\n    ) {\n        if (!router || !isPlatformBrowser(platformId)) { return this }\n        zone.runOutsideAngular(() => {\n            const activationEndEvents = router.events.pipe(filter<ActivationEnd>(e => e instanceof ActivationEnd));\n            const navigationEndEvents = router.events.pipe(filter<NavigationEnd>(e => e instanceof NavigationEnd));\n            this.disposable = navigationEndEvents.pipe(\n                withLatestFrom(activationEndEvents),\n                switchMap(([navigationEnd, activationEnd]) => {\n                    // SEMVER: start using optional chains and nullish coalescing once we support newer typescript\n                    const page_path = navigationEnd.url;\n                    const screen_name = activationEnd.snapshot.routeConfig && activationEnd.snapshot.routeConfig.path || page_path;\n                    const params = {\n                        [SCREEN_NAME_KEY]: screen_name,\n                        [PAGE_PATH_KEY]: page_path,\n                        [FIREBASE_EVENT_ORIGIN_KEY]: EVENT_ORIGIN_AUTO,\n                        [FIREBASE_SCREEN_NAME_KEY]: screen_name,\n                        [OUTLET_KEY]: activationEnd.snapshot.outlet\n                    };\n                    if (title) {\n                        params[PAGE_TITLE_KEY] = title.getTitle()\n                    }\n                    const component = activationEnd.snapshot.component;\n                    const routeConfig = activationEnd.snapshot.routeConfig;\n                    const loadChildren = routeConfig && routeConfig.loadChildren;\n                    // TODO figure out how to handle minification\n                    if (typeof loadChildren === \"string\") {\n                        // SEMVER: this is the older lazy load style \"./path#ClassName\", drop this when we drop old ng\n                        // TODO is it worth seeing if I can look up the component factory selector from the module name?\n                        // it's lazy so it's not registered with componentFactoryResolver yet... seems a pain for a depreciated style\n                        return of({...params, [SCREEN_CLASS_KEY]: loadChildren.split('#')[1]});\n                    } else if (typeof component === 'string') {\n                        return of({...params, [SCREEN_CLASS_KEY]: component });\n                    } else if (component) {\n                        const componentFactory = componentFactoryResolver.resolveComponentFactory(component);\n                        return of({...params, [SCREEN_CLASS_KEY]: componentFactory.selector });\n                    } else if (loadChildren) {\n                        const loadedChildren = loadChildren();\n                        var loadedChildren$: Observable<any> = (loadedChildren instanceof Observable) ? loadedChildren : from(Promise.resolve(loadedChildren));\n                        return loadedChildren$.pipe(\n                          map(lazyModule => {\n                            if (lazyModule instanceof NgModuleFactory) {\n                              // AOT create an injector\n                              const moduleRef = lazyModule.create(injector);\n                              // INVESTIGATE is this the right way to get at the matching route?\n                              const routes = moduleRef.injector.get(ROUTES);\n                              const component = routes[0][0].component; // should i just be grabbing 0-0 here?\n                              try {\n                                const componentFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(component!);\n                                return {...params, [SCREEN_CLASS_KEY]: componentFactory.selector};\n                              } catch(_) {\n                                return {...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS};\n                              }\n                            } else {\n                              // JIT look at the annotations\n                              // INVESTIGATE are there public APIs for this stuff?\n                              const declarations = [].concat.apply([], (lazyModule[ANNOTATIONS] || []).map((f:any) => f.declarations));\n                              const selectors = [].concat.apply([], declarations.map((c:any) => (c[ANNOTATIONS] || []).map((f:any) => f.selector)));\n                              // should I just be grabbing the selector like this or should i match against the route component?\n                              //   const routerModule = lazyModule.ngInjectorDef.imports.find(i => i.ngModule && ....);\n                              //   const route = routerModule.providers[0].find(p => p.provide == ROUTES).useValue[0];\n                              return {...params, [SCREEN_CLASS_KEY]: selectors[0] || DEFAULT_SCREEN_CLASS};\n                            }\n                          })\n                        );\n                    } else {\n                        return of({...params, [SCREEN_CLASS_KEY]: DEFAULT_SCREEN_CLASS});\n                    }\n                }),\n                map(params => ({\n                    [FIREBASE_SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY],\n                    [FIREBASE_SCREEN_INSTANCE_ID_KEY]: getScreenInstanceID(params),\n                    ...params\n                })),\n                tap(params => {\n                    // TODO perhaps I can be smarter about this, bubble events up to the nearest outlet?\n                    if (params[OUTLET_KEY] == NG_PRIMARY_OUTLET) {\n                        analytics.setCurrentScreen(params[SCREEN_NAME_KEY]);\n                        analytics.updateConfig({\n                            [PAGE_PATH_KEY]: params[PAGE_PATH_KEY],\n                            [SCREEN_CLASS_KEY]: params[SCREEN_CLASS_KEY]\n                        });\n                        if (title) {\n                            analytics.updateConfig({ [PAGE_TITLE_KEY]: params[PAGE_TITLE_KEY] })\n                        }\n                    }\n                }),\n                groupBy(params => params[OUTLET_KEY]),\n                mergeMap(group => group.pipe(startWith(undefined), pairwise())),\n                map(([prior, current]) => prior ? {\n                    [FIREBASE_PREVIOUS_SCREEN_CLASS_KEY]: prior[SCREEN_CLASS_KEY],\n                    [FIREBASE_PREVIOUS_SCREEN_NAME_KEY]: prior[SCREEN_NAME_KEY],\n                    [FIREBASE_PREVIOUS_SCREEN_INSTANCE_ID_KEY]: prior[FIREBASE_SCREEN_INSTANCE_ID_KEY],\n                    ...current!\n                } : current!),\n                tap(params => debugModeEnabled && console.info(SCREEN_VIEW_EVENT, params)),\n                tap(params => zone.runOutsideAngular(() => analytics.logEvent(SCREEN_VIEW_EVENT, params)))\n            ).subscribe();\n        });\n    }\n  \n    ngOnDestroy() {\n      if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n  \n}\n\n@Injectable({\n    providedIn: 'any'\n})\nexport class UserTrackingService implements OnDestroy {\n\n    private disposable: Subscription|undefined;\n\n    // TODO a user properties injector\n    constructor(\n        analytics: AngularFireAnalytics,\n        zone: NgZone,\n        @Inject(PLATFORM_ID) platformId:Object\n    ) {\n        const schedulers = new ɵAngularFireSchedulers(zone);\n\n        if (!isPlatformServer(platformId)) {\n            zone.runOutsideAngular(() => {\n                // @ts-ignore zap the import in the UMD\n                this.disposable = from(import('firebase/auth')).pipe(\n                    observeOn(schedulers.outsideAngular),\n                    switchMap(() => analytics.app),\n                    map(app => app.auth()),\n                    switchMap(auth => new Observable<User|null>(auth.onAuthStateChanged.bind(auth))),\n                    switchMap(user => analytics.setUserId(user ? user.uid : null!))\n                ).subscribe();\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.disposable) { this.disposable.unsubscribe(); }\n    }\n}\n\n// this is an INT64 in iOS/Android but use INT32 cause javascript\nlet nextScreenInstanceID = Math.floor(Math.random() * (2**32 - 1)) - 2**31;\n\nconst knownScreenInstanceIDs: {[key:string]: number} = {};\n\nconst getScreenInstanceID = (params:{[key:string]: any}) => {\n    // unique the screen class against the outlet name\n    const screenInstanceKey = [\n        params[SCREEN_CLASS_KEY],\n        params[OUTLET_KEY]\n    ].join(SCREEN_INSTANCE_DELIMITER);\n    if (knownScreenInstanceIDs.hasOwnProperty(screenInstanceKey)) {\n        return knownScreenInstanceIDs[screenInstanceKey];\n    } else {\n        const ret = nextScreenInstanceID++;\n        knownScreenInstanceIDs[screenInstanceKey] = ret;\n        return ret;\n    }\n}","import { NgModule, Optional } from '@angular/core';\nimport { UserTrackingService, ScreenTrackingService } from './analytics.service';\nimport { AngularFireAnalytics } from './analytics';\n\n@NgModule({\n  providers: [ AngularFireAnalytics ]\n})\nexport class AngularFireAnalyticsModule {\n  constructor(\n    analytics: AngularFireAnalytics,\n    @Optional() screenTracking: ScreenTrackingService,\n    @Optional() userTracking: UserTrackingService\n  ) {\n    // calling anything on analytics will eagerly load the SDK\n    analytics.app;\n  }\n}\n"]}